name: unit tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  unit_tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cxx: [g++-9, clang++-9, clang++-10, clang++-11, clang++-12, clang++-13, clang++-14, clang++-15]
        build: [Release, Debug]
    env:
      CXX: ${{ matrix.cxx }}
      BUILD: ${{ matrix.build }}

    steps:
    - uses: actions/checkout@v3
    - name: dependencies
      run: |
        chmod +x .github/workflows/install_deps_ci.sh
        ./.github/workflows/install_deps_ci.sh
    - name: Install Gtest
      run: |
        chmod +x .github/workflows/install_gtest.sh
        ./.github/workflows/install_gtest.sh
    - name: run cmake
      run: |
        mkdir build && cd build
        cmake -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.build }} ..
    - name: build and run
      run: |
        cd build
        $CXX --version
        if [ "$CXX" != "clang++-14" ] || [ "$BUILD" != "Debug" ]; then
        make Tests_C++17 -j$(nproc)
        ./Test/C++17/Tests_C++17 --gtest_color=yes
        fi

  unit_tests_latest_compilers:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        cxx: [g++-10, g++-11, g++-12, clang++-16, clang++-17]
        build: [Release, Debug]
    env:
      CXX: ${{ matrix.cxx }}

    steps:
      - uses: actions/checkout@v3
      - name: dependencies
        run: |
          chmod +x .github/workflows/install_deps_ci.sh
          ./.github/workflows/install_deps_ci.sh

      - name: Install Gtest
        run: |
          chmod +x .github/workflows/install_gtest.sh
          ./.github/workflows/install_gtest.sh
      - name: run cmake
        run: |
          mkdir build && cd build
          cmake -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.build }} ..
      - name: build and run
        run: |
          cd build
          $CXX --version
          make Tests_C++17 -j$(nproc)
          ./Test/C++17/Tests_C++17 --gtest_color=yes
      - name: build and run
        run: |
          cd build
          $CXX --version
          make Tests_C++20 -j$(nproc)
          ./Test/C++20/Tests_C++20 --gtest_color=yes
